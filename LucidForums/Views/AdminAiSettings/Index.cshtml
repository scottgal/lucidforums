@model LucidForums.Controllers.AdminAiSettingsController.IndexVm
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Admin • AI Settings";
}
<div class="prose-header">
    <h1>AI Settings</h1>
    <p class="text-base-content/70">Choose which AI provider and model to use for generation, translation, and embeddings.</p>
    <div class="mt-2 flex gap-2 flex-wrap">
        <a href="@Url.Action("Index", "AdminTranslation")" class="btn btn-sm btn-primary" title="Manage site translations">Translations</a>
        <button type="button" class="btn btn-sm btn-accent"
                hx-get="/Setup"
                hx-target="#setup-modal-content"
                hx-swap="innerHTML"
                onclick="document.getElementById('setup-modal').showModal()"
                title="Use AI to generate realistic sample content">Populate the site</button>
        <form method="post" action="/Admin/ClearContent" onsubmit="return confirm('This will delete all forums, threads, messages, memberships, and embeddings. Settings and users are preserved. Are you sure?');">
            @Html.AntiForgeryToken()
            <button type="submit" class="btn btn-sm btn-error" title="Delete all content (forums, threads, messages, embeddings)">Clear data</button>
        </form>
    </div>

    <dialog id="setup-modal" class="modal">
        <div class="modal-box max-w-4xl">
            <form method="dialog">
                <button class="btn btn-sm btn-circle btn-ghost absolute right-2 top-2">✕</button>
            </form>
            <div id="setup-modal-content">
                <div class="flex justify-center items-center h-32">
                    <span class="loading loading-spinner loading-lg"></span>
                </div>
            </div>
        </div>
        <form method="dialog" class="modal-backdrop">
            <button>close</button>
        </form>
    </dialog>
</div>
@if (TempData["Message"] is string tmsg && !string.IsNullOrWhiteSpace(tmsg))
{
    <div class="alert alert-success my-3">@tmsg</div>
}
@if (TempData["Error"] is string terr && !string.IsNullOrWhiteSpace(terr))
{
    <div class="alert alert-error my-3">@terr</div>
}
@if (!string.IsNullOrWhiteSpace(Model.Message))
{
    <div class="alert alert-success my-3">@Model.Message</div>
}
@if (!string.IsNullOrWhiteSpace(Model.Error))
{
    <div class="alert alert-error my-3">@Model.Error</div>
}
<form method="post" action="/Admin/AiSettings/Save">
    @Html.AntiForgeryToken()
    <div class="grid-3col-lg">
        <div class="card bg-base-100 shadow">
            <div class="card-body">
                <h2 class="card-title">Generation</h2>
                <div class="form-control">
                    <label class="label">Provider</label>
                    <select name="GenerationProvider" class="select select-bordered w-full">
                        @foreach (var p in Model.Providers)
                        {
                            <option value="@p" selected="@(string.Equals(Model.GenerationProvider, p, StringComparison.OrdinalIgnoreCase))">@p</option>
                        }
                    </select>
                </div>
                <div class="form-control mt-3">
                    <label class="label">Model</label>
                    <select name="GenerationModel" class="select select-bordered w-full">
                        <option value="">(Default)</option>
                        @foreach (var m in Model.GenerationModels)
                        {
                            <option value="@m" selected="@(string.Equals(Model.GenerationModel, m, StringComparison.OrdinalIgnoreCase))">@m</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="card bg-base-100 shadow">
            <div class="card-body">
                <h2 class="card-title">Translation</h2>
                <div class="form-control">
                    <label class="label">Provider</label>
                    <select name="TranslationProvider" class="select select-bordered w-full">
                        @foreach (var p in Model.Providers)
                        {
                            <option value="@p" selected="@(string.Equals(Model.TranslationProvider, p, StringComparison.OrdinalIgnoreCase))">@p</option>
                        }
                    </select>
                </div>
                <div class="form-control mt-3">
                    <label class="label">Model</label>
                    <select name="TranslationModel" class="select select-bordered w-full">
                        <option value="">(Default)</option>
                        @foreach (var m in Model.TranslationModels)
                        {
                            <option value="@m" selected="@(string.Equals(Model.TranslationModel, m, StringComparison.OrdinalIgnoreCase))">@m</option>
                        }
                    </select>
                </div>
            </div>
        </div>
        <div class="card bg-base-100 shadow">
            <div class="card-body">
                <h2 class="card-title">Embeddings</h2>
                <div class="form-control">
                    <label class="label">Provider</label>
                    <select name="EmbeddingProvider" class="select select-bordered w-full">
                        @foreach (var p in Model.Providers)
                        {
                            <option value="@p" selected="@(string.Equals(Model.EmbeddingProvider, p, StringComparison.OrdinalIgnoreCase))">@p</option>
                        }
                    </select>
                </div>
                <div class="form-control mt-3">
                    <label class="label">Model</label>
                    <select name="EmbeddingModel" class="select select-bordered w-full">
                        <option value="">(Default)</option>
                        @foreach (var m in Model.EmbeddingModels)
                        {
                            <option value="@m" selected="@(string.Equals(Model.EmbeddingModel, m, StringComparison.OrdinalIgnoreCase))">@m</option>
                        }
                    </select>
                </div>
            </div>
        </div>
    </div>
    <div class="mt-6">
        <button class="btn btn-primary" type="submit">Save All</button>
    </div>
</form>
@section Scripts {
}